apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ include "hostkraken.domainDashed" . }}
  namespace: {{ include "hostkraken.domainDashed" . }}
  labels:
    {{- include "hostkraken.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt"
    external-dns.alpha.kubernetes.io/hostname: "{{ .Values.domain }},www.{{ .Values.domain }}"
    nginx.ingress.kubernetes.io/proxy-body-size: 128m
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "600"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
spec:
  tls:
    - hosts:
      - "{{ .Values.domain }}"
      - "www.{{ .Values.domain }}"
      secretName: {{ .Values.domain }}-tls
  rules:
    - host: "{{ .Values.domain }}"
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ $fullName }}
              servicePort: 80
    - host: "www.{{ .Values.domain }}"
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ $fullName }}
              servicePort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webhook-ingress-{{ include "hostkraken.domainDashed" . }}
  namespace: argocd-workflows
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt"
    external-dns.alpha.kubernetes.io/hostname: "{{ include "hostkraken.domainDashed" . }}-webhook.hostkraken.com"
spec:
  tls:
    - hosts:
      - "{{ include "hostkraken.domainDashed" . }}-webhook.hostkraken.com"
      secretName: {{ include "hostkraken.domainDashed" . }}-webhook-tls
  rules:
    - host: "{{ include "hostkraken.domainDashed" . }}-webhook.hostkraken.com"
      http:
        paths:
          - path: /
            backend:
              serviceName: webhook-eventsource-{{ include "hostkraken.domainDashed" . }}
              servicePort: 12000

