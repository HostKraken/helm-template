{{- $fullName := include "hostkraken.domainDashed" . -}}
{{- if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ include "hostkraken.domainDashed" . }}
  namespace: {{ include "hostkraken.domainDashed" . }}
  labels:
    {{- include "hostkraken.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt"
    external-dns.alpha.kubernetes.io/hostname: "{{ .Values.domain }},www.{{ .Values.domain }}"
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
        "SecAction phase:1,nolog,pass,initcol:ip=%{REQUEST_HEADERS:CF-Connecting-IP},initcol:user=%{REQUEST_HEADERS:CF-Connecting-IP},id:5000134
        <Locationmatch "/wp-login.php">
        # Setup brute force detection.
        # React if block flag has been set.
        SecRule user:bf_block "@gt 0" "deny,status:401,log,id:5000135,msg:'ip address blocked for 5 minutes, more than 10 login attempts in 3 minutes.'"
        # Setup Tracking. On a successful login, a 302 redirect is performed, a 200 indicates login failed.
        SecRule RESPONSE_STATUS "^302" "phase:5,t:none,nolog,pass,setvar:ip.bf_counter=0,id:5000136"
        SecRule RESPONSE_STATUS "^200" "phase:5,chain,t:none,nolog,pass,setvar:ip.bf_counter=+1,deprecatevar:ip.bf_counter=1/180,id:5000137"
        SecRule ip:bf_counter "@gt 10" "t:none,setvar:user.bf_block=1,expirevar:user.bf_block=300,setvar:ip.bf_counter=0"
        </locationmatch>"
spec:
  tls:
    - hosts:
      - "{{ .Values.domain }}"
      - "www.{{ .Values.domain }}"
      secretName: {{ .Values.domain }}-tls
  rules:
    - host: "{{ .Values.domain }}"
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ $fullName }}
              servicePort: 80
    - host: "www.{{ .Values.domain }}"
      http:
        paths:
          - path: /
            backend:
              serviceName: {{ $fullName }}
              servicePort: 80
---
{{- $fullName := include "hostkraken.domainDashed" . -}}
{{- if semverCompare ">=1.14-0" .Capabilities.KubeVersion.GitVersion -}}
apiVersion: networking.k8s.io/v1beta1
{{- else -}}
apiVersion: extensions/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: webhook-ingress-{{ include "hostkraken.domainDashed" . }}
  namespace: argocd-workflows
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: "letsencrypt"
    external-dns.alpha.kubernetes.io/hostname: "{{ include "hostkraken.domainDashed" . }}-webhook.hostkraken.com"
spec:
  tls:
    - hosts:
      - "{{ include "hostkraken.domainDashed" . }}-webhook.hostkraken.com"
      secretName: {{ include "hostkraken.domainDashed" . }}-webhook-tls
  rules:
    - host: "{{ include "hostkraken.domainDashed" . }}-webhook.hostkraken.com"
      http:
        paths:
          - path: /
            backend:
              serviceName: webhook-eventsource-{{ include "hostkraken.domainDashed" . }}
              servicePort: 12000

