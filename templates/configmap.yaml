{{- $Plugins := .Values.plugins | splitList "," -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "hostkraken.domainDashed" . }}-configmap
  namespace: {{ include "hostkraken.domainDashed" . }}
data:
  php-fpm.conf: |
    error_log = /usr/logs/php-fpm/php-fpm.log
    log_level = warning

    [www]
    user = nginx
    group = nginx
    listen = /var/run/php7-fpm.sock
    listen.owner = nginx
    listen.group = nginx
    pm = static
    ; Total RAM dedicated to the web server / Max child process size
    pm.max_children = 8

    pm.process_idle_timeout = 3600s
    pm.max_requests = 10000
    chdir = /usr/html
    php_flag[display_errors] = off
    php_admin_value[opcache.enable] = 0
    php_admin_value[memory_limit] = 256M
    php_admin_value[upload_max_filesize] = 2048M
    php_admin_value[post_max_size] = 128M
    php_admin_value[output_buffering] = 1
    php_admin_value[openssl.cafile] = /etc/ssl/certs/ca-certificates.crt
    php_admin_value[openssl.capath] = /etc/ssl/certs
    php_admin_value[max_input_nesting_level] = 256
    php_admin_value[max_input_vars] = 10000

    ; Redirect worker stdout and stderr into main error log. If not set, stdout and
    ; stderr will be redirected to /dev/null according to FastCGI specs.
    ; Default Value: no
    catch_workers_output = yes

    ; Database variables passed via -e argument on Docker
    env["DB_HOST"] = "$DB_HOST"
    env["DB_USER"] = "$DB_USER"
    env["DB_PASS"] = "$DB_PASS"
    env["DB_NAME"] = "$DB_NAME"
  blacklist.ini: |
    /usr/html/wp-content/plugins/woo-*
    /usr/html/wp-content/plugins/woocommerc*
    /usr/html/wp-admin/*
    /usr/html/wp-login.php
  00_pgsql.conf: |
    extension=pgsql
  db-config.php: |-
    <?php
    /**
    * Use HyperDB to just use the replica for frontend reads.
    * Register the primary server to HyperDB
    */
    $wpdb->add_database( array(
            'host'     => "mysql-galera-local-mariadb-galera-0.mysql-galera-local-mariadb-galera-headless.mysql",
            'user'     => "DB_USER",
            'password' => "DB_PASSWORD",
            'name'     => "DB_NAME",
            'write'    => 1, 
            'read'     => is_admin() ? 1 : 0,
    ));
    /**
    * Register replica database server if it's available in this environment
    */
            $wpdb->add_database(array(
                    'host'     => "mysql-galera-local-mariadb-galera-1.mysql-galera-local-mariadb-galera-headless.mysql",
                    'user'     => "DB_USER",
                    'password' => "DB_PASSWORD",
                    'name'     => "DB_NAME",
                    'write'    => 0, 
                    'read'     => is_admin() ? 0 : 1, 
            ));
            
            $wpdb->add_database(array(
                    'host'     => "mysql-galera-local-mariadb-galera-2.mysql-galera-local-mariadb-galera-headless.mysql",
                    'user'     => "DB_USER",
                    'password' => "DB_PASSWORD",
                    'name'     => "DB_NAME",
                    'write'    => 0, 
                    'read'     => is_admin() ? 0 : 1, 
                    ));
          
  disable-updates.php: |
    // hide update notifications
    function remove_core_updates(){

    global $wp_version;return(object) array('last_checked'=> time(),'version_checked'=> $wp_version,);
     }
    add_filter('pre_site_transient_update_core','remove_core_updates'); //hide updates for WordPress itself
    add_filter('pre_site_transient_update_plugins','remove_core_updates'); //hide updates for all plugins
    add_filter('pre_site_transient_update_themes','remove_core_updates'); //hide updates for all themes
    function remove_admin_menu_items() {
    $remove_menu_items = array(__('Dashboard'));
    global $menu;
    end ($menu);
    while (prev($menu)){
        $item = explode(' ',$menu[key($menu)][0]);
    if(in_array($item[0] != NULL?$item[0]:"" , $remove_menu_items)){
    unset($menu[key($menu)]);}
    }
    } 
    add_action('admin_menu', 'remove_admin_menu_items');
    function remove_plugin_install() {
    $page = remove_submenu_page( 'plugins.php', 'plugin-install.php' );
    $page = remove_submenu_page( 'themes.php', 'theme-editor.php' );
    $page = remove_submenu_page( 'themes.php', 'themes.php' );
    $page = remove_submenu_page( 'tools.php', 'site-health.php' );
    $page = remove_submenu_page( 'tools.php', 'import.php' );
    $page = remove_submenu_page( 'tools.php', 'export.php' );
    $page = remove_submenu_page( 'plugins.php', 'plugin-editor.php' );
    // $page[0] is the menu title
    // $page[1] is the minimum level or capability required
    // $page[2] is the URL to the item's file
    }
    add_action( 'admin_menu', 'remove_plugin_install', 999 );



  database-migration.sh: |
    set -x
    rm -f /usr/html/wp-admin/install.php; 
    cp /configs/php-fpm.conf /etc/php7/php-fpm.conf;
    echo ""
    killall -HUP php-fpm7
    php-fpm7
    cp /configs/wp-config.php /usr/html;
    chown nginx: /usr/html/wp-config.php;
    wget https://downloads.wordpress.org/plugin/hyperdb.1.8.zip;
    unzip hyperdb.1.8.zip;
    mv hyperdb/db.php /usr/html/wp-content;
    sleep 1;
    cp /configs/db-config.php /usr/html;
    # gross hacks for old sites
    case $DATABASE_NAME in
      *"db_"*)
        echo "Database name matches formmat. Continuing.."
        ;;
      *)
        echo "Database name does not match format. Fixing..."  
        dbtemp1=`echo $DATABASE_NAME`
        dbtemp=db_${dbtemp1}
        export DATABASE_NAME=$dbtemp
        ;;
    esac           
    case $DATABASE_USER in
      *"user_"*)
        echo "Database name matches format. Continuing.."
        ;;
      *)
        echo "Database user does not match format. Fixing..."  
        usertemp1=`echo $DATABASE_USER|head -c25`
        usertemp=user_${usertemp1}
        export DATABASE_USER=$usertemp
        ;;
    esac
    sed -i "s/DB_USER/$DATABASE_USER/g" /usr/html/db-config.php;
    sed -i "s/DB_PASSWORD/$DATABASE_PASS/g" /usr/html/db-config.php;
    sed -i "s/DB_NAME/$DATABASE_NAME/g" /usr/html/db-config.php;
    sed -i "s/ADATABASE_USER/$DATABASE_USER/g" /usr/html/wp-config.php;
    sed -i "s/ADATABASE_PASS/$DATABASE_PASS/g" /usr/html/wp-config.php;
    sed -i "s/ADATABASE_NAME/$DATABASE_NAME/g" /usr/html/wp-config.php;
    if ! /usr/bin/wp-cli core is-installed --path='/usr/html'; then
    /usr/bin/wp-cli core install --path='/usr/html' --url="`echo {{ .Release.Name }} | tr '-' '.' `" --title='{{ .Values.site_title | default "New Deployment" }}' --admin_user='admin' --admin_email='roger@hostkraken.com' --admin_password='H0stKr4ken' || true
    /usr/bin/wp-cli plugin deactivate hello --path=/usr/html
    /usr/bin/wp-cli plugin uninstall hello --path=/usr/html
    fi
    {{- range $Plugins }}
    if ! /usr/bin/wp-cli plugin is-installed {{ . }} --path='/usr/html' ; then
    /usr/bin/wp-cli plugin install {{ . }} --path=/usr/html || true    
    fi
    if ! /usr/bin/wp-cli plugin is-active {{ . }} --path='/usr/html' ; then
    /usr/bin/wp-cli plugin activate {{ . }} --path=/usr/html || true
    fi
    {{- end }}
    export divi_url=`aws s3 presign s3://krakenwpassets/Divi.zip`
    /usr/bin/wp-cli theme install --path='/usr/html' "$divi_url"
    /usr/bin/wp-cli theme install --activate {{ .Values.wp_theme|default "twentytwenty" }} --path='/usr/html'
    /usr/bin/wp-cli theme activate {{ .Values.wp_theme|default "twentytwenty" }} --path='/usr/html'
    export disabledupdates=`grep -c "hide update" /usr/html/wp-content/themes/{{ .Values.wp_theme|default "twentytwenty" }}/functions.php`
    if [[ "$disabledupdates" -eq 0 ]]; then
      cat /configs/disable-updates.php >>/usr/html/wp-content/themes/{{ .Values.wp_theme|default "twentytwenty" }}/functions.php
    fi
    rm -f /usr/html/wp-admin/plugin-editor.php
    rm -f /usr/html/wp-admin/plugin-install.php
    rm -f /usr/html/wp-admin/site-health.php
    rm -f /usr/html/wp-admin/site-health-info.php
    rm -f /usr/html/wp-admin/import.php
    rm -f /usr/html/wp-admin/theme-editor.php
    rm -f /usr/html/wp-admin/export.php
    sed -i 's/<a.*plugin-install.php.*\/a>//g' /usr/html/wp-admin/plugins.php

  wp-config.php: |
    <?php 
    /* MySQL settings */
    define( 'DB_NAME',     'ADATABASE_NAME' );
    define( 'DB_USER',     'ADATABASE_USER' );
    define( 'DB_PASSWORD', 'ADATABASE_PASS' );
    define( 'DB_HOST',     'mysql-galera-local-mariadb-galera-0.mysql-galera-local-mariadb-galera-headless.mysql' );
    define( 'DB_CHARSET',  'utf8' );
    #define('FORCE_SSL_ADMIN', true);
    define('SITE_URL', "https://{{ .Values.domain }}");
    define('WP_HOME','https://{{ .Values.domain }}');
    define('WP_SITEURL','https://{{ .Values.domain }}');
    /* MySQL database table prefix. */
    $table_prefix = '{{- .Values.table_prefix | default "wp_" -}}';
    //Begin Really Simple SSL Load balancing fix
    if ((isset($_ENV["HTTPS"]) && ("on" == $_ENV["HTTPS"]))
    || (isset($_SERVER["HTTP_X_FORWARDED_SSL"]) && (strpos($_SERVER["HTTP_X_FORWARDED_SSL"], "1") !== false))
    || (isset($_SERVER["HTTP_X_FORWARDED_SSL"]) && (strpos($_SERVER["HTTP_X_FORWARDED_SSL"], "on") !== false))
    || (isset($_SERVER["HTTP_CF_VISITOR"]) && (strpos($_SERVER["HTTP_CF_VISITOR"], "https") !== false))
    || (isset($_SERVER["HTTP_CLOUDFRONT_FORWARDED_PROTO"]) && (strpos($_SERVER["HTTP_CLOUDFRONT_FORWARDED_PROTO"], "https") !== false))
    || (isset($_SERVER["HTTP_X_FORWARDED_PROTO"]) && (strpos($_SERVER["HTTP_X_FORWARDED_PROTO"], "https") !== false))
    || (isset($_SERVER["HTTP_X_PROTO"]) && (strpos($_SERVER["HTTP_X_PROTO"], "SSL") !== false))
    ) {
      $_SERVER["HTTPS"] = "on";
    }
    //END Really Simple SSL 

    /* Authentication Unique Keys and Salts. */
    /* https://api.wordpress.org/secret-key/1.1/salt/ */
    define( 'AUTH_KEY',         '{{ randAlphaNum 16 }}' );
    define( 'SECURE_AUTH_KEY',  '{{ randAlphaNum 16 }}' );
    define( 'LOGGED_IN_KEY',    '{{ randAlphaNum 16 }}' );
    define( 'NONCE_KEY',        '{{ randAlphaNum 16 }}' );
    define( 'AUTH_SALT',        '{{ randAlphaNum 16 }}' );
    define( 'SECURE_AUTH_SALT', '{{ randAlphaNum 16 }}' );
    define( 'LOGGED_IN_SALT',   '{{ randAlphaNum 16 }}' );
    define( 'NONCE_SALT',       '{{ randAlphaNum 16 }}' );


    /* Absolute path to the WordPress directory. */
    if ( !defined('ABSPATH') )
      define('ABSPATH', dirname(__FILE__) . '/');

    /* Sets up WordPress vars and included files. */
    require_once(ABSPATH . 'wp-settings.php');

    
