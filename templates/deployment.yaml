{{- $Plugins := .Values.plugins | splitList "," -}}
{{- $PluginsCount := len $Plugins -}}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "hostkraken.domainDashed" . }}
  namespace: {{ include "hostkraken.domainDashed" . }}
  labels:
    {{- include "hostkraken.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "hostkraken.domainDashed" . }}
  revisionHistoryLimit: 1
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "hostkraken.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations: 
        rollme: {{ randAlphaNum 5 | quote }}
      labels:
        {{- include "hostkraken.selectorLabels" . | nindent 8 }}
        approle: web
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                - {{ include "hostkraken.domainDashed" . }}
            topologyKey: kubernetes.io/hostname    
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: default
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: db-creds
          csi:
            driver: "secrets-store.csi.k8s.io"
            readOnly: true
            volumeAttributes:
              secretProviderClass: "vault-db-{{ include "hostkraken.domainDashed" . }}"
        - name: divi-creds
          csi:
            driver: "secrets-store.csi.k8s.io"
            readOnly: true
            volumeAttributes:
              secretProviderClass: divi-bucket-secret             
        - name: config-volume
          configMap:
            name: {{ include "hostkraken.domainDashed" . }}-configmap    
        - name: wp-autoptimize-ceph-{{ include "hostkraken.domainDashed" . }}
          persistentVolumeClaim:
            claimName: wp-autoptimize-ceph-{{ include "hostkraken.domainDashed" . }}  
        - name: wp-uploads-ceph-{{ include "hostkraken.domainDashed" . }}
          persistentVolumeClaim:
            claimName: wp-uploads-ceph-{{ include "hostkraken.domainDashed" . }}         
      containers:      
        - name: {{ include "hostkraken.domainDashed" . }}    
          volumeMounts:
          - name: "divi-creds"
            mountPath: "/mnt/divi-secret"
            readOnly: true
          - name: "db-creds"
            mountPath: "/mnt/secrets-store"
            readOnly: true         
          - name: config-volume
            mountPath: /configs
          - name: wp-uploads-ceph-{{ include "hostkraken.domainDashed" . }}
            mountPath: /usr/html/wp-content/uploads     
          - name: wp-autoptimize-ceph-{{ include "hostkraken.domainDashed" . }}
            mountPath: /usr/html/wp-content/cache  
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "wordpress:6.0.1-fpm-alpine"
          imagePullPolicy: Always
          env:
          - name: AWS_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                name: divi-bucket-secret
                key: AWS_ACCESS_KEY_ID
          - name: AWS_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                name: divi-bucket-secret
                key: AWS_SECRET_ACCESS_KEY
          - name: DATABASE_USER
            valueFrom:
              secretKeyRef:
                name: {{ include "hostkraken.domainDashed" . }}-db-creds-secret
                key: user
          - name: DATABASE_PASS
            valueFrom:
              secretKeyRef:
                name: {{ include "hostkraken.domainDashed" . }}-db-creds-secret
                key: pass
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: {{ include "hostkraken.domainDashed" . }}-db-creds-secret
                key: name
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            exec:
              command: 
              - "/bin/sh"
              - "-c"
              - "[[ $( pgrep nginx | wc -l)  -gt 1 ]]"
            initialDelaySeconds: {{ add ( mul $PluginsCount 3 ) 70 }}
            periodSeconds: 5
            failureThreshold: 30
          readinessProbe:
            exec:
              command: 
              - "/bin/sh"
              - "-c"
              - "[[ $( pgrep nginx | wc -l)  -gt 1 ]]"
            initialDelaySeconds: {{ add ( mul $PluginsCount 3 ) 70 }}
            periodSeconds: 5
            failureThreshold: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
