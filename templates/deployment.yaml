apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "REPLACE.fullname" . }}
  labels:
    {{- include "REPLACE.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "REPLACE.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations: 
        rollme: {{ randAlphaNum 5 | quote }}
        vault.banzaicloud.io/vault-addr: "https://vaultino.vault-infra.svc:8200"
        vault.security.banzaicloud.io/vault-tls-secret: "vault-tls"
      labels:
        {{- include "REPLACE.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "REPLACE.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config-volume
          configMap:
            name: REPLACE-configmap
        - name: wp-uploads-{{ .Chart.Name }}
          persistentVolumeClaim:
            claimName: wp-uploads-{{ .Chart.Name }}
        - emptyDir:
            medium: Memory
          name: vault-env
        - name: vault-tls
          secret:
            secretName: vault-tls    
      initContainers:
      - name: copy-vault-env
        command:
        - sh
        - -c
        - cp /usr/local/bin/vault-env /vault/
        image: banzaicloud/vault-env:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /vault/
          name: vault-env                    
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: VAULT_ADDR
              value: https://vaultino.vault-infra.svc.cluster.local:8200
            - name: VAULT_SKIP_VERIFY
              value: "false"
            - name: VAULT_PATH
              value: kubernetes
            - name: VAULT_ROLE
              value: default
            - name: VAULT_IGNORE_MISSING_SECRETS
              value: "false"
            - name: VAULT_CACERT
              value: /vault/tls/ca.crt                  
            - name: DATABASE_USER
              value: "vault:secret/data/mysql/{{ .Chart.Name }}#user"
            - name: DATABASE_NAME
              value: "vault:secret/data/mysql/{{ .Chart.Name }}#name"
            - name: DATABASE_PASS
              value: "vault:secret/data/mysql/{{ .Chart.Name }}#pass"
          volumeMounts:
          - name: config-volume
            mountPath: /configs
          - name: wp-uploads-{{ .Chart.Name }}
            mountPath: /usr/html/wp-content/uploads
          - mountPath: /vault/
            name: vault-env
          - mountPath: /vault/tls/ca.crt
            name: vault-tls
            subPath: ca.crt                  
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ add ( mul (len .Values.plugins) 5 ) 60 }}
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ add ( mul (len .Values.plugins) 5 ) 60 }}
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "REPLACE.fullname" . }}-mysql
  labels:
    {{- include "REPLACE.labels_mysql" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "REPLACE.selectorLabels_mysql" . | nindent 6 }}
  template:
    metadata:
      annotations: 
        vault.banzaicloud.io/vault-addr: "https://vaultino.vault-infra.svc:8200"
        vault.security.banzaicloud.io/vault-tls-secret: "vault-tls"
      labels:
        {{- include "REPLACE.selectorLabels_mysql" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "REPLACE.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
        - name: config-volume
          configMap:
            name: REPLACE-configmap
        - name: mysql-data-{{ .Chart.Name }}
          persistentVolumeClaim:
            claimName: mysql-data-{{ .Chart.Name }}
        - emptyDir:
            medium: Memory
          name: vault-env
        - name: vault-tls
          secret:
            secretName: vault-tls    
      initContainers:
      - name: copy-vault-env
        command:
        - sh
        - -c
        - cp /usr/local/bin/vault-env /vault/
        image: banzaicloud/vault-env:latest
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /vault/
          name: vault-env                    
      containers:
        - name: {{ .Chart.Name }}-mysql
          volumeMounts:
          - name: mysql-data-{{ .Chart.Name }}
            mountPath: /var/lib/mysql
          - name: config-volume
            mountPath: /configs
          - mountPath: /vault/
            name: vault-env
          - mountPath: /vault/tls/ca.crt
            name: vault-tls
            subPath: ca.crt
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.dbimage.repository }}:{{ .Values.dbimage.tag }}"
          imagePullPolicy: {{ .Values.dbimage.pullPolicy }}
          env:
            - name: VAULT_ADDR
              value: https://vaultino.vault-infra.svc.cluster.local:8200
            - name: VAULT_SKIP_VERIFY
              value: "false"
            - name: VAULT_PATH
              value: kubernetes
            - name: VAULT_ROLE
              value: default
            - name: VAULT_IGNORE_MISSING_SECRETS
              value: "false"
            - name: VAULT_CACERT
              value: /vault/tls/ca.crt                  
            - name: MYSQL_ROOT_PASSWORD
              value: "vault:secret/data/mysql/{{ .Chart.Name }}#rootpw"
            - name: MYSQL_USER
              value: "vault:secret/data/mysql/{{ .Chart.Name }}#user"
            - name: MYSQL_DATABASE
              value: "vault:secret/data/mysql/{{ .Chart.Name }}#name"
            - name: MYSQL_PASSWORD
              value: "vault:secret/data/mysql/{{ .Chart.Name }}#pass"
          ports:
            - name: mysql
              containerPort: 3306
              protocol: TCP
          readinessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 15
          livenessProbe:
            tcpSocket:
              port: 3306
            initialDelaySeconds: 30
            periodSeconds: 15
          resources:
            {{- toYaml .Values.mysqlresources | nindent 12 }}      
            
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}


